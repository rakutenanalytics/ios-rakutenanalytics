//
//  REntityJSONSerializer.h
//  RSDKSupport
//
//  Created by Zachary Radke on 11/25/13.
//  Copyright (c) 2013 Rakuten Inc. All rights reserved.
//

@import Foundation;

/**
 * This protocol defines classes which can be serialized from and to JSON by the REntityJSONSerializer
 * class. In addition to the formally declared methods of this protocol, informally the serializer
 * will use methods with the signature `+<PROPERTY_KEY>JSONTransformer` returning an
 * `NSValueTransformer` to transform properties.
 *
 * When constructing a dictionary for @ref REntityJSONSerializer-p::JSONKeyPathsForPropertyKeys, it is recommended to use the
 * pattern `NSStringFromSelector(@selector(<PROPERTY_KEY))` with standard properties (those without
 * custom getters) to take advantage of compiler warnings during refactoring.
 *
 * @protocol REntityJSONSerializer REntityJSONSerializer.h <RSDKSupport/REntityJSONSerializer.h>
 */
@protocol REntityJSONSerializer <NSObject>
@required

/**
 * Returns a dictionary mapping property keys to their JSON key path counterparts.
 *
 * Only property keys and the corresponding JSON key paths included in the returned dictionary will be
 * used when serializing to and from JSON.
 *
 * @return A dictionary mapping property keys to their JSON key path counterparts.
 */
+ (NSDictionary *)JSONKeyPathsForPropertyKeys;

@optional

/**
 * Method for providing an `NSValueTransformer` which should be used when converting data to and from
 * JSON based on the property key.
 *
 * Only if the class implements this method will it be called, and if the class also implements
 * methods with the `+<PROPERTY_KEY>JSONTransformer` pattern, those methods will be called first, and
 * this method called as a last resort.
 *
 * @param propertyKey The property key which is requesting a value transformer.
 * @return An `NSValueTransformer` which should be used to transform the property, or `nil` to not modify
 *         the data.
 */
+ (NSValueTransformer *)JSONTransformerForPropertyKey:(NSString *)propertyKey;

@end

/**
 * Domain for errors generated by @ref REntityJSONSerializer instances and subclasses.
 *
 * @ingroup SupportConstants
 */
FOUNDATION_EXTERN NSString *const REntityJSONSerializationErrorDomain;

/**
 * Error code when an exception is caught during serialization.
 *
 * @ingroup SupportConstants
 */
static NSInteger const REntityJSONSerializationExceptionError = -2007;

/**
 * Error code when a required parameter is missing during serialization.
 *
 * @ingroup SupportConstants
 */
static NSInteger const REntityJSONSerializationMissingParameterError = -2008;


/**
 * A class for serializing entities from and to JSON. In order to be serialized, the entity or
 * entity's class must conform to the @ref REntityJSONSerializer-p protocol. This class provides class facing
 * methods and instance methods for serializing entities.
 *
 * @class REntityJSONSerializer REntityJSONSerializer.h <RSDKSupport/REntityJSONSerializer.h>
 */
@interface REntityJSONSerializer : NSObject

/// @name Creating a serializer

/**
 * Generate a new serializer configured for an entity class.
 *
 * @param entityClass The class of entities to serialize. This should conform to the @ref REntityJSONSerializer-p
 *                    protocol.
 * @return A new instance of the receiver.
 */
+ (instancetype)serializerWithEntityClass:(Class)entityClass;


/// @name Setting the entity class

/// The class which should be serialized. This should conform to the @ref REntityJSONSerializer-p protocol
@property (assign, nonatomic) Class entityClass;


/**
 * @name Serializing entities from an instance
 */

/**
 * Serializes an entity from a JSON dictionary
 *
 * This method will go through the JSON dictionary and map the JSON key paths to properties on the
 * entity. If an exception is raised while setting values on the entity, in debug mode an exception
 * will be thrown. In release, the error pointer will be populated.
 *
 * @warning This method will throw an exception if #entityClass is not set, or does not conform to
 *          the @ref REntityJSONSerializer-p protocol.
 *
 * @param JSONDictionary JSON dictionary to use when populating the new entity.
 * @param error          Optional error pointer which may be populated if a serialization error occurs.
 * @return A new instance of the entityClass populated with the JSON.
 */
- (id)entityFromJSONDictionary:(NSDictionary *)JSONDictionary error:(NSError **)error;


/**
 * Serializes an entity into a JSON dictionary.
 *
 * @note When serializing entities into JSON, #entityClass is ignored and the
 *       class of the entity being passed is used instead.
 *
 * @warning This method will throw an exception if entity is `nil`, or does not conform to the
 *          @ref REntityJSONSerializer-p protocol.
 *
 * @param entity Entity to serialize into JSON.
 *
 * @param error Optional error pointer which may be populated if a serialization error occurs.
 *
 * @return An `NSDictionary` representing the entity serialized into JSON, or `nil` if an error occured.
 */
- (NSDictionary *)JSONDictionaryFromEntity:(id)entity error:(NSError **)error;


/**
 * @name Serializing entities from the class
 */

/**
 * Serialize a JSON dictionary into an entity.
 *
 * @see #entityFromJSONDictionary:error:
 * @param entityClass    Class of the entity to be generated.
 * @param JSONDictionary JSON dictionary to populate the new entity with.
 * @param error          Optional error pointer which may be populated if a serialization error occurs.
 * @return A populated instance of the entity class.
 */
+ (id)entityOfClass:(Class)entityClass fromJSONDictionary:(NSDictionary *)JSONDictionary error:(NSError **)error;

/**
 * Serialize an entity into JSON.
 *
 * @param entity Entity to serialize into JSON. This must be present, and conform to the
 *               @ref REntityJSONSerializer-p protocol.
 *
 * @param error  Optional error pointer which may be populated if a serialization error occurs.
 *
 * @return An `NSDictionary` instance representing the serialized entity, or `nil` if a serialization error occurs.
 */
+ (NSDictionary *)JSONDictionaryFromEntity:(id)entity error:(NSError **)error;
@end
